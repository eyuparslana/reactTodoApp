{"ast":null,"code":"var _jsxFileName = \"/home/eyuparslan/PycharmProjects/todofrontend/src/components/Modal.js\";\nimport React, { ReactPropTypes as PropTypes } from \"react\";\n\nclass Modal extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = e => {\n      if (this.node.contains(e.target)) {\n        return;\n      }\n\n      this.handleClickOutside();\n    };\n\n    this.handleClickOutside = e => {\n      this.props.onClose();\n    };\n  }\n\n  /* Close modal when clickin outside\n  https://medium.com/@pitipatdop/little-neat-trick-to-capture-click-outside-react-component-5604830beb7f */\n  componentWillMount() {\n    document.addEventListener('mousedown', this.handleClick, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClick, false);\n  }\n\n  render() {\n    if (!this.props.show) {\n      return null;\n    } // gray background\n\n\n    const backdropStyle = {\n      position: 'fixed',\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      backgroundColor: 'rgba(0,0,0,0.3)',\n      padding: 50\n    }; // The modal \"window\"\n\n    const modalStyle = {\n      backgroundColor: '#fff',\n      borderRadius: 5,\n      maxWidth: 500,\n      minHeight: 300,\n      margin: '0 auto',\n      padding: 30\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: backdropStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: modalStyle,\n      ref: node => this.node = node,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, this.props.children, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.props.onClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }, \"Close Modal\"))));\n  }\n\n}\n\n;\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  show: PropTypes.bool,\n  children: PropTypes.node\n};","map":{"version":3,"sources":["/home/eyuparslan/PycharmProjects/todofrontend/src/components/Modal.js"],"names":["React","ReactPropTypes","PropTypes","Modal","Component","handleClick","e","node","contains","target","handleClickOutside","props","onClose","componentWillMount","document","addEventListener","componentWillUnmount","removeEventListener","render","show","backdropStyle","position","top","bottom","left","right","backgroundColor","padding","modalStyle","borderRadius","maxWidth","minHeight","margin","children","propTypes","func","isRequired","bool"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,cAAc,IAAIC,SAAjC,QAAiD,OAAjD;;AAEA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAWhCC,WAXgC,GAWjBC,CAAD,IAAO;AACjB,UAAI,KAAKC,IAAL,CAAUC,QAAV,CAAmBF,CAAC,CAACG,MAArB,CAAJ,EAAkC;AAC9B;AACH;;AACD,WAAKC,kBAAL;AACH,KAhB+B;;AAAA,SAkBhCA,kBAlBgC,GAkBVJ,CAAD,IAAO;AACxB,WAAKK,KAAL,CAAWC,OAAX;AACH,KApB+B;AAAA;;AAChC;;AAEAC,EAAAA,kBAAkB,GAAG;AACjBC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuC,KAAKV,WAA5C,EAAyD,KAAzD;AACH;;AAEDW,EAAAA,oBAAoB,GAAG;AACnBF,IAAAA,QAAQ,CAACG,mBAAT,CAA6B,WAA7B,EAA0C,KAAKZ,WAA/C,EAA4D,KAA5D;AACH;;AAaDa,EAAAA,MAAM,GAAG;AAEL,QAAI,CAAC,KAAKP,KAAL,CAAWQ,IAAhB,EAAsB;AAClB,aAAO,IAAP;AACH,KAJI,CAML;;;AACA,UAAMC,aAAa,GAAG;AAClBC,MAAAA,QAAQ,EAAE,OADQ;AAElBC,MAAAA,GAAG,EAAE,CAFa;AAGlBC,MAAAA,MAAM,EAAE,CAHU;AAIlBC,MAAAA,IAAI,EAAE,CAJY;AAKlBC,MAAAA,KAAK,EAAE,CALW;AAMlBC,MAAAA,eAAe,EAAE,iBANC;AAOlBC,MAAAA,OAAO,EAAE;AAPS,KAAtB,CAPK,CAiBL;;AACA,UAAMC,UAAU,GAAG;AACfF,MAAAA,eAAe,EAAE,MADF;AAEfG,MAAAA,YAAY,EAAE,CAFC;AAGfC,MAAAA,QAAQ,EAAE,GAHK;AAIfC,MAAAA,SAAS,EAAE,GAJI;AAKfC,MAAAA,MAAM,EAAE,QALO;AAMfL,MAAAA,OAAO,EAAE;AANM,KAAnB;AASA,wBACI;AAAK,MAAA,KAAK,EAAEP,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAEQ,UAAZ;AAAwB,MAAA,GAAG,EAAErB,IAAI,IAAI,KAAKA,IAAL,GAAYA,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKI,KAAL,CAAWsB,QADhB,eAEI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,OAAO,EAAE,KAAKtB,KAAL,CAAWC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CAFJ,CADJ,CADJ;AAUH;;AA3D+B;;AA4DnC;AAEDT,KAAK,CAAC+B,SAAN,GAAkB;AACdtB,EAAAA,OAAO,EAAEV,SAAS,CAACiC,IAAV,CAAeC,UADV;AAEdjB,EAAAA,IAAI,EAAEjB,SAAS,CAACmC,IAFF;AAGdJ,EAAAA,QAAQ,EAAE/B,SAAS,CAACK;AAHN,CAAlB","sourcesContent":["import React, {ReactPropTypes as PropTypes} from \"react\";\n\nclass Modal extends React.Component {\n    /* Close modal when clickin outside\n    https://medium.com/@pitipatdop/little-neat-trick-to-capture-click-outside-react-component-5604830beb7f */\n    componentWillMount() {\n        document.addEventListener('mousedown', this.handleClick, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClick, false);\n    }\n\n    handleClick = (e) => {\n        if (this.node.contains(e.target)) {\n            return\n        }\n        this.handleClickOutside();\n    }\n\n    handleClickOutside = (e) => {\n        this.props.onClose();\n    }\n\n    render() {\n\n        if (!this.props.show) {\n            return null;\n        }\n\n        // gray background\n        const backdropStyle = {\n            position: 'fixed',\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            backgroundColor: 'rgba(0,0,0,0.3)',\n            padding: 50\n        };\n\n        // The modal \"window\"\n        const modalStyle = {\n            backgroundColor: '#fff',\n            borderRadius: 5,\n            maxWidth: 500,\n            minHeight: 300,\n            margin: '0 auto',\n            padding: 30\n        };\n\n        return (\n            <div style={backdropStyle}>\n                <div style={modalStyle} ref={node => this.node = node}>\n                    {this.props.children}\n                    <div className=\"footer\">\n                        <button onClick={this.props.onClose}>Close Modal</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n};\n\nModal.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    show: PropTypes.bool,\n    children: PropTypes.node\n};"]},"metadata":{},"sourceType":"module"}